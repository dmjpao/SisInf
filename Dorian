--Ejecutalo en PGAdmin4
create or replace function VerificarUsuario (
	vusuario varchar,
	vcontrasena varchar
) 
returns boolean
as 
$$
DECLARE
	res boolean = false;
begin 
	if exists(
		select nombre 
			from usuario
				where nombre=vusuario and contrasena=vcontrasena
	)
then res := true;
		   	Insert into sesion (usuario_idusuario, ip, pid)
			values ((select idusuario 
			from usuario
				where nombre=vusuario) ,(select inet_client_addr()), (select pg_backend_pid()));
		   
		   
end if;
return res;
end
$$
language 'plpgsql';


create or replace function IU_USUARIO(
	vusuario varchar
)
returns table (idiu integer)
as
$$

	
begin 
return query
    select DISTINCT funcion_has_iu.iu_idiu
		from (select funcion_idfuncion
	  			from (select rol_idrol
	 	   				 from usuario_has_rol
	       				 where usuario_idusuario in (select idusuario 
			  											from Usuario
			 											where nombre = vusuario)
	       				 ) uno, rol_has_funcion
	 				 where uno.rol_idrol=rol_has_funcion.rol_idrol) dos, funcion_has_iu
			where dos.funcion_idfuncion=funcion_has_iu.funcion_idfuncion;

end
$$
language 'plpgsql';








--------------------------------------------------------------------------------------------------------------------------------------------------------

//NetBeans



void presentarIU(){
     Statement  at = null;
      DefaultTableModel modelo = new DefaultTableModel();
  modelo.addColumn("Interfaz");
 // modelo.addColumn("Nombre");  
  //modelo.addColumn("Precio");
  //modelo.addColumn("Tiempo");
  tablaa.setModel(modelo);
  DefaultComboBoxModel combo = new DefaultComboBoxModel();
 String datos[] = new String[1];

        try {
             at = Conexion.createStatement();
          
            ResultSet rs = at.executeQuery("Select IU_USUARIO('" +nombree.getText()+"')");
            while (rs.next()){
                datos[0]= rs.getString("iu_usuario");
                    /*if(datos[0] == "1"){
                         new Inventarios().setVisible(true);
                    }*/
                 
                //datos[1]= rs.getString("nombre");
               // datos[2]= rs.getString("precio");
               // datos[3]= rs.getString("tiempo");
                modelo.addRow(datos); 
            }
           // JOptionPane.showMessageDialog(null, "Acepta para continuar");
            rs.close();
            at.close();
        } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
        }
        
        
        
       // System.out.println(tablaa.getValueAt(0, 0).toString()); //filas t columnas
    }  







void mostrarinterfaz(){
    
           inventariobtn.setEnabled(false); 
           ventasbtn.setEnabled(false); 
           cajabtn.setEnabled(false); 
           contabilidadbtn.setEnabled(false); 
    
int cols = tablaa.getColumnCount();
int fils = tablaa.getRowCount();
for(int i=0; i<fils; i++) {
for(int j=0; j<cols; j++){
    String valor=tablaa.getValueAt(i, j).toString();
        if ("1".equals(valor) ) {
       // new Inventarios().setVisible(true);
       inventariobtn.setEnabled(true);      
        }
        if ("2".equals(valor) ) {
       contabilidadbtn.setEnabled(true);      
        }
        if ("3".equals(valor) ) {
       cajabtn.setEnabled(true);      
        }
        if ("8".equals(valor) ) {
       ventasbtn.setEnabled(true);      
        }
//System.out.println(tablaa.getValueAt(i, j).toString());

}
}

    
}










-----------------------------------------------------------------------------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
--TRUNCATE usuario,sexo,rol,usuario_has_rol RESTART IDENTITY CASCADE

--select * from sexo
insert into sexo (sexo)
values ('Femenino');
insert into sexo (sexo)
values ('Masculino');


--select * from usuario
insert into usuario (sexo_idsexo, nombre, contrasena, fechanacimiento,salario)
values (1,'Pepe','12345','2002-12-02',2000.5);
insert into usuario (sexo_idsexo, nombre, contrasena, fechanacimiento,salario)
values (1,'Marco','12345','2002-12-01',2650.5);
insert into usuario (sexo_idsexo, nombre, contrasena, fechanacimiento,salario)
values (1,'Dorian','12345','2002-12-03',2506.5);
insert into usuario (sexo_idsexo, nombre, contrasena, fechanacimiento,salario)
values (2,'Andrea','12345','2002-12-03',2506.5);


--select * from rol
insert into rol (nombre)
values ('Encargado de Almacenes');
insert into rol (nombre)
values ('Recursos Humanos');
insert into rol (nombre)
values ('Administrador');
insert into rol (nombre)
values ('Cajero');

--select * from usuario_has_rol
insert into usuario_has_rol (usuario_idusuario,rol_idrol,activo,fechainicio,fechafinal)
values(1,1,true,'2022/05/01','2023/05/01');
insert into usuario_has_rol (usuario_idusuario,rol_idrol,activo,fechainicio,fechafinal)
values(2,2,true,'2022/01/01','2023/01/01');
insert into usuario_has_rol (usuario_idusuario,rol_idrol,activo,fechainicio,fechafinal)
values(3,3,true,'2020/02/02','2025/02/02');
insert into usuario_has_rol (usuario_idusuario,rol_idrol,activo,fechainicio,fechafinal)
values(4,4,true,'2021/08/04','2024/04/19');




create or replace function Get_Rol_Usuario(
	vusuario varchar
)
returns integer
as
$$
declare 
	res integer;
	
begin 
res= (select rol_idrol from usuario_has_rol 
where usuario_has_rol.usuario_idusuario=(select idusuario from usuario where nombre=vusuario)
);
return res;
end
$$
language 'plpgsql';


/* Linea de como ejecutar */select Get_Rol_Usuario('Pepe');
